[
  {
    "id": "tab1",
    "type": "ui_tab",
    "name": "CardioIoT",
    "icon": "favorite",
    "order": 1
  },
  {
    "id": "grp_main",
    "type": "ui_group",
    "name": "Monitor",
    "tab": "tab1",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "mqtt_in",
    "type": "mqtt in",
    "z": "",
    "name": "HiveMQ - Telemetry",
    "topic": "cardio/telemetry/#",
    "qos": "0",
    "datatype": "auto",
    "broker": "mqtt_broker",
    "nl": false,
    "rap": true,
    "rh": 0
  },
  {
    "id": "mqtt_broker",
    "type": "mqtt-broker",
    "name": "HiveMQ Cloud",
    "broker": "SEU-CLUSTER.hivemq.cloud",
    "port": "8883",
    "clientid": "",
    "tls": "tls_conf",
    "protocolVersion": "4",
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "closeTopic": "",
    "closePayload": "",
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "user": "SEU_USUARIO",
    "password": "SUA_SENHA",
    "keepalive": "60",
    "clean": true,
    "sessionExpiry": "",
    "credentials": {}
  },
  {
    "id": "tls_conf",
    "type": "tls-config",
    "name": "TLS (demo)",
    "cert": "",
    "key": "",
    "ca": "",
    "certname": "",
    "keyname": "",
    "caname": "",
    "servername": "",
    "verifyservercert": false
  },
  {
    "id": "json_parse",
    "type": "json",
    "z": "",
    "name": "JSON parse",
    "property": "payload",
    "action": "",
    "pretty": false
  },
  {
    "id": "fn_route",
    "type": "function",
    "z": "",
    "name": "Extrai campos + alerta",
    "func": "const p = msg.payload;\nif (!p || typeof p !== 'object') return null;\n\nconst temp = Number(p.temp);\nconst bpm  = Number(p.bpm);\nconst tht  = Number(p.tht || 38.0);\nconst thb  = Number(p.thb || 120);\n\nmsg.temp = temp; \nmsg.bpm  = bpm; \nmsg.alert = (temp > tht) || (bpm > thb);\nmsg.device = p.device || \"?\";\n\n// Para o gauge (temperatura)\nconst msgGauge = {payload: temp, topic: 'temp'};\n\n// Para o gráfico (BPM)\nconst msgChart = {payload: bpm, topic: 'bpm'};\n\n// Para texto de alerta\nlet text = \"OK\";\nif (temp > tht && bpm > thb) text = `ALERTA: Febre e Taquicardia (T>${tht}°C, BPM>${thb})`;\nelse if (temp > tht) text = `ALERTA: Temperatura Alta (>${tht}°C)`;\nelse if (bpm > thb) text = `ALERTA: BPM Alto (>${thb})`;\n\nconst msgText = {payload: text};\nconst msgColor = {payload: msg.alert ? \"#ff0000\" : \"#2e7d32\"};\n\nreturn [msgGauge, msgChart, msgText, msgColor];",
    "outputs": 4,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": []
  },
  {
    "id": "gauge_temp",
    "type": "ui_gauge",
    "z": "",
    "name": "Temperatura (°C)",
    "group": "grp_main",
    "order": 1,
    "width": 6,
    "height": 4,
    "gtype": "gage",
    "title": "Temperatura (°C)",
    "label": "°C",
    "format": "{{value}}",
    "min": 30,
    "max": 42,
    "colors": ["#00bcd4", "#f9a825", "#b71c1c"],
    "seg1": "",
    "seg2": "",
    "className": ""
  },
  {
    "id": "chart_bpm",
    "type": "ui_chart",
    "z": "",
    "name": "BPM (batimentos por minuto)",
    "group": "grp_main",
    "order": 2,
    "width": 6,
    "height": 4,
    "label": "BPM",
    "chartType": "line",
    "legend": "false",
    "xformat": "HH:mm:ss",
    "interpolate": "linear",
    "nodata": "",
    "dot": false,
    "ymin": "40",
    "ymax": "180",
    "removeOlder": "120",
    "removeOlderPoints": "",
    "removeOlderUnit": "60",
    "cutout": 0,
    "useOneColor": false,
    "useUTC": false
  },
  {
    "id": "text_alert",
    "type": "ui_text",
    "z": "",
    "group": "grp_main",
    "order": 3,
    "width": 6,
    "height": 1,
    "name": "Alerta",
    "label": "Status",
    "format": "{{msg.payload}}",
    "layout": "row-spread"
  },
  {
    "id": "color_alert",
    "type": "ui_text",
    "z": "",
    "group": "grp_main",
    "order": 4,
    "width": 6,
    "height": 1,
    "name": "Indicador",
    "label": "Indicador",
    "format": "<div style='font-weight:bold;color:{{msg.payload}}'>●</div>",
    "layout": "row-spread"
  },
  {
    "id": "link_a",
    "type": "link",
    "z": "",
    "links": []
  },
  {
    "id": "debug_raw",
    "type": "debug",
    "z": "",
    "name": "RAW",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full"
  },
  {
    "id": "w1",
    "type": "link in",
    "z": "",
    "name": "",
    "links": [],
    "x": 0,
    "y": 0,
    "wires": []
  },
  {
    "id": "mqtt_in_wires",
    "type": "link",
    "z": "",
    "links": [],
    "wires": []
  }
]
